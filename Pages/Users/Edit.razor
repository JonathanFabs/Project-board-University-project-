
@page "/User/Edit/{Id:guid}"
@inject HttpClient Http
@inject NavigationManager Navigation

    <head>
        <style>
            .content {
                max-width: 500px;
                margin: auto;
                padding: 10px
            }

            .Title {
                margin: auto;
                padding-bottom: 5px
            }
        </style>

        <h3><b><div class="Title">Edit user details page</div></b></h3>
    </head>

    <body>
        <div class="content">
            <h4><i><div class="Title">Please enter the details of the user you would like to edit</div></i></h4>
            <EditForm Model="User" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label class="control-label">Enter Username:</label>
                    <InputText @bind-Value="User.UserName"></InputText>
                    <ValidationMessage For="@(() => User.UserName)" />
                </div>
                <div class="form-group">
                    <label class=" control-label">Enter the Users company Id:</label>
                    <InputText @bind-Value="User.CompanyId"></InputText>
                    <ValidationMessage For="@(() => User.CompanyName)" />
                    <p style="font-size: 14px"><i>For example: Halifax 3 .</i></p>
                </div>
                <div class="form-group">
                    <label class=" control-label">Users company name:</label>
                    <InputText @bind-Value="User.CompanyName"></InputText>
                    <ValidationMessage For="@(() => User.CompanyName)" />
                    <p style="font-size: 14px"><i>Enter the users company name .</i></p>
                </div>

                <button type="submit" class=" btn-btn-primary">Submit</button>
            </EditForm>
        </div>
    </body>

@code {
    public User User { get; set; } = new User();
    [Parameter]
    public Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        User = await Http.GetFromJsonAsync<User>($"/api/Users/{Id}");
    }

    private async void HandleValidSubmit()

    {
        var response = await Http.PutAsJsonAsync($"/api/Users/{Id}", User);
        response.EnsureSuccessStatusCode();
        Navigation.NavigateTo("/Users");
    }
    //add comments under fields giving an example of whats expected
}
